[build-system]
requires = ["setuptools>=45", "setuptools-scm[toml]>=7.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gh-project-metrics"
dynamic = ["version"]
description = ""
readme = "README.md"
requires-python = ">=3.11"
license = { text = "Apache-2.0" }
keywords = []
authors = [{ name = "Adrian Rumpold", email = "a.rumpold@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pandas",
  "matplotlib",
  "PyGithub",
  "google-cloud-bigquery",
  "db-dtypes", # BigQuery to Pandas
  "pandas-gbq",
  "plotly",
  "kaleido==0.2.1", # Plotly image export; FIXME: 0.2.1.post1 is broken
  "supabase",
  "loguru>=0.7.3",
  "dagster>=1.9.5",
  "dagster-webserver>=1.9.5",
  "packaging>=24.2",
  "gcsfs>=2024.12.0",
]

[tool.uv]
dev-dependencies = [
  "build>=0.10.0",
  "pre-commit>=3.3.3",
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "ruff",
]

[project.scripts]
project-analytics = "gh_project_metrics.main:run"

[project.urls]
Documentation = "https://github.com/AdrianoKF/gh-project-metrics#readme"
Issues = "https://github.com/AdrianoKF/gh-project-metrics/issues"
Source = "https://github.com/AdrianoKF/gh-project-metrics"

# Automatically determine version number from Git tags
[tool.setuptools_scm]

[tool.setuptools]
package-dir = { "" = "src" }
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "7"
testpaths = ["tests"]
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = ["error"]
addopts = "-ra --strict-markers --strict-config --doctest-modules --doctest-continue-on-failure"

[tool.mypy]
files = "src"
python_version = "3.11"
strict = false
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[tool.ruff]
preview = true
line-length = 100

[tool.ruff.lint]
select = [
  "E",
  "F",
  "I",
  "W",
  "B",
  "UP",
  "C4",
  "PYI",
  "PTH",
  "T10", # prevent stray debug breakpoints
]
ignore = [
  "B019", # cached-instance-method - will fix later
  "E501", # Line too long
]

[tool.coverage.run]
source_pkgs = ["gh_project_metrics", "tests"]
branch = true
parallel = true
omit = ["src/gh_project_metrics/__about__.py"]

[tool.coverage.paths]
gh_project_metrics = [
  "src/gh_project_metrics",
  "*/gh-project-metrics/src/gh_project_metrics",
]
tests = ["tests", "*/gh-project-metrics/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.dagster]
module_name = "gh_project_metrics.dagster.definitions"
project_name = "project_analytics"
